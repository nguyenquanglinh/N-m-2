<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>