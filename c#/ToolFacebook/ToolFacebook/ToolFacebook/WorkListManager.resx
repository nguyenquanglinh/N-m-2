<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EDKNCEDINP8f4HHMegyvTG8AAAAASUVORK5CYII=
</value>
  </data>
</root>